
; BODGED 3.8.89

;             SAVED AS ASEMBLER


;    INCL EDITOR


;FLAGS IN E'

; BIT 0 PRINT OUT REQUIRED
; BIT 1 DOING INCLUDE FILE
; BIT 2 IS AT EOL
; BIT 3 SET IF LABLE DEFINED
; BIT 4 SET IF NO C/C EXPECTED
; BIT 5 SET IF LABLE UNDEFINED
; BIT 6 SET BY ORG RES BY LOAD
; BIT 7 SET BY ORG



SETKEYS:
LD BC,3B7FH
CALL TOBC
LD HL,K0
LD B,8
LD DE,16
SETK0:PUSH HL
SETK1:LD A,(HL)
INC HL
OUT (VDATA),A
OR A
JP P,SETK1
POP HL
ADD HL,DE
DJNZ SETK0

LD B,8
SETK3:XOR A
OUT (VDATA),A
LD A,8
SUB B
OR S
OUT (VDATA),A
DJNZ SETK3

LD HL,0FB41H
LD (HL),5
INC HL
LD (HL),30H
INC HL
LD (HL),8
RET

K0:DB 28.S
DS 15

DB 1CH
DB 'LEXEC',8DH
DB "ED",0,0,0,0,0,0,0

DB 1CH
DB "Don't press me"
DB 8DH

DB 1CH
DB 'LEXEC',0DH,"AA",0DH
DB "OOP",0DH
DBH 8D00

DB 1CH
DB 'LEXEC',0DH,"AA",0DH
DBH 8D0000000000

DB 1CH
DB 'SEXEC',8DH
DB "ED",0,0,0,0,0,0,0

DB 1CH
DB 'A',13,'Q','OP',13.S
DS 9

DB 1CH
DB 'OP',13.S
DS 12



TOBC:
PUSH AF
LD A,C
OUT (VADD),A
LD A,B
PUSH AF
POP AF
OUT (VADD),A
POP AF
RET

TOHL:
PUSH AF
LD A,L
OUT (VADD),A
PUSH AF
POP AF
LD A,H
OUT (VADD),A
POP AF
RET


SPRINT:EX (SP),HL
LD A,(HL)
INC HL
EX (SP),HL
OR A
JP M,LAST
CALL PRINT
JR SPRINT
LAST:AND 7FH
JP PRINT


HOME:PUSH HL
LD HL,1
LD (VCOL),HL
POP HL
RET

PRMES:
LD HL,MES0
LD B,A
PRMES1:BIT 7,(HL)
INC HL
JR Z,PRMES1
DJNZ PRMES1
PRMES2:LD A,(HL)
OR A  
RES 7,A
JP M,PRINT
CALL PRINT
INC HL
JR PRMES2

S:EQU 80H

PRLNUM:
LD A,H
CALL P2X
LD A,L

P2X:PUSH AF
RRA
RRA
RRA
RRA
CALL PX
POP AF

PX:AND 0FH
ADD 90H
DAA
ADC 40H
DAA

PRINT:PUSH HL
PUSH DE
PUSH BC
PUSH AF
LD HL,VCOL
CP 32
JP NC,NCNT
CP 4
JR NZ,NPRGT

INC (HL)
LD A,(HL)
CP 40
JP C,FPRINT
LD (HL),1
JP FPRINT

NPRGT:CP 8
JR NZ,NPLFT
DEC (HL)
JP NZ,FPRINT
LD (HL),39
JP FPRINT

NPLFT:CP 26
JR NZ,NPINS
CALL SCRADD
LD A,(VCOL)
SUB 40
NEG
LD E,A
CALL INBUFF
DEC HL
CALL TOHL
LD A,32
OUT (VDATA),A
INC HL
INC HL
DEC E
JR Z,INSEND
CALL OUTBUF
INSEND:
JR FPRINT



NPINS:CP 25
JR NZ,NPDEL
LD HL,VCOL
LD A,(HL)
PUSH AF
LD (HL),0
CALL SCRADD
LD E,40
CALL INBUFF
POP AF
PUSH AF
DEC A
JR Z,ISFCHAR
LD HL,INCLBUF
INC A
LD B,A
ADD L
LD L,A
ADC H
SUB L
LD H,A
LD D,H
LD E,L
DEC DE
LD A,40
SUB B
LD C,A
LD B,0
LDIR 
ISFCHAR:LD A,32
LD (INCLBUF+39),A
CALL SCRADD
LD E,40
CALL OUTBUF
POP AF
DEC A
JR NZ,$+4
LD A,39
LD (VCOL),A
JR FPRINT



NPDEL:CP 13
JR NZ,NLF
LD (HL),0
JR FPRINT

NLF:CP 10
JR NZ,NDCURS
INC HL
LD A,(HL)
INC (HL)
CP 23
JR C,FPRINT
DEC (HL)
CALL SCRUP
JP FPRINT

NDCURS:
CP 15H
JR NZ,NCTEOL
CTEOL1:LD A,32
CALL PRINT
LD A,(VCOL)
DEC A
JR NZ,CTEOL1
JR FPRINT

NCTEOL:CP 11
JR NZ,FPRINT
INC HL
DEC (HL)
JP P,FPRINT
INC (HL)

FPRINT:POP AF
POP BC
POP DE
POP HL
RET

NCNT:PUSH AF
CALL SCRADD
DEC HL
CALL TOHL
POP AF
OUT (VDATA),A
LD A,(VCOL)
INC A
CP 40
JR C,NLFD
LD A,1
NLFD:LD (VCOL),A
JP FPRINT

SCRADD:EXX
BIT 0,E
EXX
JR NZ,INA
LD A,(VROW)
SLA A
SLA A
SLA A
LD L,A
LD H,0FH
ADD HL,HL
ADD HL,HL
ADD A,L
LD L,A
JR NC,NC4
INC H
NC4:LD A,(VCOL)
ADD A,L
LD L,A
RET NC
INC H
RET

INA:LD HL,2000H
JR NC4




MES0:DB S
DB 'Not foun','d'.S   ;1
DB 'Disc ful','l'.S   ;2
DB 'EOF foun','d'.S
DB 'Silly file nam'
DB 'e'.S              ;4
DB 'No OR','G'.S      ;5
DB 'Bad labe','l'.S   ;6
DB 'Label not'
DB ' define','d'.S    ;7
DB 'Lable us'
DB 'ed twic','e'.S  ;8
DB 'No label '
DB 'roo','m'.S        ;9
DB 'Out of memor',"y".S ;10
DB 'Nonsens','e'.S     ;11
DB 'Bad LOAD addres'  ;12
DB 's'.S
DB 'Relative jump '
DB 'too fa',"r".S
DB 'Nested includ','e'.S
DB 'Aborte','d'.S
DB "WRITTEN BY",13,10
DB "MIKE WEBB",13,10
DB "1 MAPLE GROVE",13,10
DB "NEW MOSTON",13,10
DB "MANCHESTER",13,10.S




; ASSEMBLER




IBC:EQU 0
IDE:EQU 2
IHL:EQU 4
IAF:EQU 0EH
ISP:EQU 6

IB:EQU 0
IC:EQU 1
ID:EQU 2
IE:EQU 3
IH:EQU 4
IL:EQU 5
IA:EQU 7

TR:EQU 0
TRI:EQU 4
RP:EQU 1
RPI:EQU 5
XY:EQU 2
XYI:EQU 6
NO:EQU 3
NOI:EQU 7
RE:EQU 8
CC:EQU 9
XYD:EQU 10
EOL:EQU 11
TNO:EQU 12
TNOI:EQU 13

; ASSEMBLER


ER:
LD A,3
OUT (PCNT),A
LD A,L
PUSH AF
LD A,7
DW OUTC
LD HL,(TEMP)
LD (LINEST),HL
EXX
BIT 1,E
LD E,0
EXX
JR Z,ERA1

; ERR IN INCLUDE FILE

CALL PRLINE
CALL PRCRLF
CALL SPRINT
DB 10,'Error in',13,10
DB 10.S
LD HL,(INCADR)
LD (LINEST),HL
CALL ULINE
LD HL,(INCADR)
ERA1:LD (CURRENT),HL
CALL PRLINE
CALL PRCRLF
POP AF
CALL PRMES
CALL PRCRLF
LD A,7
DW OUTC
LD SP,(ERSP)
RET

PRCRLF:LD A,13
CALL PRINT
PRLF:LD A,10
JP PRINT
PRCR:LD A,13
JP PRINT

MSYMSCH:
LD A,(DE)
LD L,6
SUB 'A'
JP C,ER
CP 26
JP NC,ER
ADD A,A
LD HL,LABADS
ADD A,L
LD L,A
JR NC,$+3
INC H
LD B,C
INC C
INC C
INC DE
MS0:INC HL
LD A,(HL)
DEC HL
OR A
SCF
RET Z
LD L,(HL)
LD H,A
LD A,(HL)
CP C
PUSH DE
JR NZ,NF2
PUSH BC
PUSH HL
INC HL
MS1:DEC B
JR Z,FOUND
LD A,(DE)
CP (HL)
JR NZ,NF1
INC HL
INC DE
JP MS1
FOUND:POP DE    ;RUBISH
POP DE
POP DE
DEC DE
OR A
RET

NF1:POP HL
POP BC
NF2:LD E,(HL)
LD D,0
ADD HL,DE
POP DE
JR MS0

ASMBL:
LD (ERSP),SP
XOR A
LD (OUTFLAG),A
LD HL,LABADS
LD DE,LABADS+1
LD BC,51
LD (HL),A
LDIR 
LD HL,AEND+1
LD (FEP),HL
EXX
LD D,255
LD E,40H
EXX
CALL PASS
EXX
LD E,0
EXX
LD HL,(OBJ)
LD DE,(HIMEM)
OR A
SBC HL,DE
LD L,10
ERJR:JP NC,ER
CALL SPRINT
DB 'Pass 2:'
DB 13,10.S
EXX
LD E,40H
LD D,0
EXX

LD HL,(PC)
LD DE,(AMADD)
OR A
SBC HL,DE
LD (COUNT),HL
CALL PASS
EXX
LD E,0
EXX
CALL TOP
RET

;Lines     DW   0

PASS:LD HL,(SOF)
LD (CURRENT),HL
PS1:
; CHECK BREAK
IN A,(20H)
AND 20H
LD L,15
JR Z,ERJR


LD HL,(CURRENT)

; CHECK FOR INCLUDE

EXX
BIT 1,E
EXX
JR Z,NOTINCL

; DOING INCLUDE

LD A,L  ;LOW BYTE (CURRENT)
OR A
JP P,NNXT

; READ NEXT BLOCK FROM FILE

SUB 80H
LD (CURRENT),A
CALL RINCL
LD HL,(CURRENT)

NOTINCL:
NNXT:
LD A,(HL)
CP 1AH
JR Z,ENDINCL
CP 0AH
JR NZ,NO0AH
INC HL
NO0AH:
EX DE,HL
LD HL,(PC)
LD (PCTEMP),HL
PUSH HL
XOR A
LD (ASSLNG),A

; RESET FLAGS

EXX
LD A,E
AND 0C3H
LD E,A
EXX

LD HL,(CURRENT)
LD A,(HL)
CP 0E4H ; MARKER
JR NZ,NOBLMARK
INC HL
LD (CURRENT),HL
NOBLMARK:
LD (TEMP),HL
LD B,21H
CALL ACKLAB   ;CKECK FOR
CP 0DH      ;LABLE
JR Z,PS2
CP ':'
CALL Z,SYMBOL ;LABLE
CALL CKOPCODE
CP 0DH
JR Z,PS2
CALL OPTSCH
JR C,E1
CALL JUMP
JP NZ,E6
CALL PARSER
CP 0BH
JR NZ,E1
PS2:PUSH BC
EXX
BIT 0,E
CALL NZ,PRINTASS
EXX
POP BC
POP HL
INC B
JP NZ,PS1

ENDINCL:
PS3:EXX
BIT 1,E
RES 1,E
EXX
RET Z
CALL CLOSE
LD HL,(INCADR)
LD (CURRENT),HL
JP PS1

E0:LD L,7   ;SYMBOL
JR $+4
E1:LD L,11  ;HUH
JP ER

PRINTASS:; IN ALTERNATE REG
BIT 0,D
RET NZ
EXX
LD A,B
CP 0FEH
JR Z,DUNPRASS
LD HL,BUFF2
LD (PCSTART),HL
CALL PRNTBYTES
PUSH AF
LD HL,(TEMP)
LD (LINEST),HL
CALL PRLINE
CALL OUTLINE
POP AF
JR Z,DUNPRASS
PBAGAIN:CALL PRNTBYTES
PUSH AF
CALL PEOLBUF
POP AF
JR NZ,PBAGAIN
DUNPRASS:EXX
RET


PCTEMP:DW 0

PRNTBYTES:
LD HL,(PCTEMP)
CALL O4HX
CALL TABULATE
LD A,(ASSLNG)
OR A
JR Z,DUNBYTES
CP 5
LD B,A
JR C,ILNON
LD B,4
ILNON:SUB 4
JP P,$+4
XOR A
LD (ASSLNG),A
LD HL,(PCSTART)
PBLP:LD A,(HL)
INC HL
CALL O2HX
DJNZ PBLP
DUNBYTES:LD (PCSTART),HL
CALL TABULATE
LD A,(ASSLNG)
OR A
RET

TABULATE:
LD A,9
JP POUT

SETTABUL:
PUSH HL
LD HL,TABPOS
SETT1:LD A,(HL)
PUSH AF
CALL POUT
POP AF
INC HL
OR A
JR NZ,SETT1
POP HL
RET

TABPOS:DB 27,68,8,17,27,32
DB 0

CKOPCODE:
LD DE,(CURRENT)
LD L,E
LD H,D
LD C,255
LD A,(HL)
INC HL
CP 13
JR Z,ISEOL
CP ';'
JR Z,AISCOM
DEC HL
CKOPC1:LD A,(HL)
INC HL
INC C
CP ";"
JR Z,GOTOPCODE
CP 33
JR NC,CKOPC1
GOTOPCODE:DEC HL
LD (CURRENT),HL
XOR A
RET

ACKLAB:
LD C,255
LD A,(HL)
INC HL
CP 13
JR Z,ISEOL
CP ';'
JR Z,AISCOM
DEC HL
ACKLAB1:LD A,(HL)
INC HL
INC C
CP ' '
JR Z,NOLAB
CP ';'
JR Z,NOLAB
CP 0DH
JR Z,NOLAB
CP ':'
JR NZ,ACKLAB1
LD (CURRENT),HL
RET

AISCOM:CALL GETEOL
ISEOL:LD (CURRENT),HL
RET
NOLAB:XOR A
RET


CONVERT:DEC HL
LD A,(HL)
CP 'H'
JR Z,ISHEX
CP 'O'
JR Z,ISOCT
CP 'B'
JR Z,ISBIN
LD C,0AH
ISDEC:
LD HL,0
CV1:LD A,(DE)
SUB 30H
CP 0AH
CCF
RET C
PUSH DE
ADD HL,HL
LD E,L
LD D,H
ADD HL,HL
ADD HL,HL
ADD HL,DE
ADD A,L
LD L,A
JR NC,$+3
INC H
POP DE
INC DE
DJNZ CV1
OR A
RET 

ISBIN:DEC B
LD HL,0
BIN1:LD A,(DE)
SUB 30H
SRL A
JR NZ,NUMER
ADC HL,HL
INC DE
DJNZ BIN1
RET 

ISHEX:DEC B
LD HL,0
HEX1:LD A,(DE)
SUB 30H
CP 0AH
JR C,HEX2
SUB 7
CP 0AH
RET C
HEX2:ADD HL,HL
ADD HL,HL
ADD HL,HL
ADD HL,HL
ADD A,L
LD L,A
JR NC,$+3
INC H
INC DE
DJNZ HEX1
OR A
RET 

ISOCT:DEC B
LD HL,0
OCT1:LD A,(DE)
SUB 30H
CP 08H
CCF
RET C
ADD HL,HL
ADD HL,HL
ADD HL,HL
ADD A,L
LD L,A
JR NC,$+3
INC H
INC DE
DJNZ OCT1
RET 


NUMER:SCF
RET

JER:JP ER

SYMBOL:
EXX
SET 3,E
EXX
INC C
DEC C
JP Z,E0
EXX
BIT 0,D
EXX
JR Z,SY2
CALL MSYMSCH
PUSH HL
LD (LBLP),HL
LD L,8    ;DOUBLE
JR NC,JER
CALL L0E67
LD L,6   ; RESERVED
JR NC,JER
POP HL
LD A,(FEP)
LD (HL),A
INC HL
LD A,(FEP+1)
LD (HL),A
LD HL,(FEP)
PUSH HL
LD B,0
ADD HL,BC
INC HL
INC HL
INC HL
CALL CKSOF
LD L,9   ;FULL
JR C,JER
POP HL
LD (HL),C
INC HL
EX DE,HL
DEC C
DEC C
DEC C
JR Z,NLDIR
LDIR 
NLDIR:EX DE,HL
POP BC
POP DE
PUSH DE
PUSH BC
LD (LBLP),HL
LD (HL),E
INC HL
LD (HL),D
INC HL
LD (HL),0
INC HL
LD (HL),0
INC HL
LD (FEP),HL
SY2:RET
JUMP:LD B,H
BIT 7,L
JR NZ,JP2
EXX
SET 4,E
EXX
JP2:RES 7,L
LD E,L
LD D,0
LD A,L
LD HL,JPTAB
ADD HL,DE
LD E,(HL)
INC HL
LD D,(HL)
PUSH DE
CP NUMMONO  ;9
RET C
CP NUMDUO   ;37+8
JP C,PARSER
CALL PARSER
PUSH HL
PUSH AF
CALL PARSER
LD C,A
POP AF
EX DE,HL
POP HL
RLCA 
RLCA 
RLCA 
RLCA 
OR C
LD C,A
POP IY
CALL AFIND
LD B,A
JR Z,JP3
EX DE,HL
JP3:LD A,L
RLCA 
RLCA 
RLCA 
RLCA 
OR E
JP (IY)


CKSOF:PUSH DE
EX DE,HL
LD HL,(SOF)
OR A  
SBC HL,DE
EX DE,HL
POP DE
RET 
;
;CKEOF     PUSH DE
;          EX   DE,HL
;          LD   HL,(EOF)
;          DEC  HL
;          OR   A
;          SBC  HL,DE
;          EX   DE,HL
;          POP  DE
;          RET  NC
;          LD   L,10  ;EOF
;          JP   ER

JPTAB:
NMOFB:EQU $-JPTAB
DW MOFB
NL30:EQU $-JPTAB
DW L30
NENDH:EQU $-JPTAB
DW ENDH
NINCLH:EQU $-JPTAB
DW INCLH
NKEYH:EQU $-JPTAB
DW KEYH
NOUTP:EQU $-JPTAB
DW OUTPH
NOUTS:EQU $-JPTAB
DW OUTSH
NDBHH:EQU $-JPTAB
DW DBHH
NDBBH:EQU $-JPTAB
DW DBBH

NUMMONO:EQU $-JPTAB



NRSTH:EQU $-JPTAB
DW RSTH
NRETH:EQU $-JPTAB
DW RETH
NPPH:EQU $-JPTAB
DW PPH
NJRH:EQU $-JPTAB
DW JRH
NDJH:EQU $-JPTAB
DW DJH
NINCH:EQU $-JPTAB
DW INCH
NML1H:EQU $-JPTAB
DW ML1
NSRH:EQU $-JPTAB
DW SRH
NBITH:EQU $-JPTAB
DW BITH
NDWH:EQU $-JPTAB
DW DWH
NDBH:EQU $-JPTAB
DW DBH
NDSH:EQU $-JPTAB
DW DSH
NEQUH:EQU $-JPTAB
DW EQUH
NORGH:EQU $-JPTAB
DW ORGH
NIMH:EQU $-JPTAB
DW IMH
NLOADH:EQU $-JPTAB
DW LOADH
NPRNTH:EQU $-JPTAB
DW PRNTH
DW 0
DW 0
DW 0
DW 0

NUMDUO:EQU $-JPTAB

NLTAB:EQU $-JPTAB
DW LTAB
NCALTAB:EQU $-JPTAB
DW CALTAB
NJMPTAB:EQU $-JPTAB
DW JMPTAB
NXTAB:EQU $-JPTAB
DW XTAB
NINTAB:EQU $-JPTAB
DW INTAB
NADDTAB:EQU $-JPTAB
DW ADDTAB
NADCTAB:EQU $-JPTAB
DW ADCTAB
NSBCTAB:EQU $-JPTAB
DW SBCTAB
NOUTAB:EQU $-JPTAB
DW OUTAB


KEYH:
LD HL,(CURRENT)
CALL GETKEY
LD L,11
JR C,JER2
LD HL,(CURRENT)
CALL GETEOL
LD D,H
LD E,L
LD (CURRENT),HL
EXX
SET 2,E
EXX
RET

GETEOL:
LD A,(HL)
INC HL
CP 0DH
RET Z
JR GETEOL

JER2:JP ER

INCLH:
EXX
BIT 1,E
EXX
JP NZ,NESTED
LD HL,(CURRENT)
CALL GETEOL
LD (INCADR),HL
LD HL,(CURRENT)
INC HL
LD (NAMEAD),HL
CALL GETNAM
EXX
PUSH DE
EXX
CALL OPEN
INC A
LD L,1
JR Z,JER2
EXX
POP DE
SET 1,E
PUSH DE
EXX
LD C,RSEQ
LD DE,FCB
CALL 5
LD HL,DMA
LD DE,INCLBUF+128
LD BC,128
LDIR 
INC A
LD L,3
JR Z,JER2
CALL RINCL
XOR A
EXX
POP DE
SET 2,E
EXX
LD HL,INCLBUF
LD (CURRENT),HL
LD E,L
LD D,H
RET

NESTED:
LD HL,(TEMP)
LD (LINEST),HL
CALL PRLINE
CALL PRCRLF
CALL SPRINT
DB "Ignored nest",10,13.S
LD HL,(CURRENT)
CALL GETEOL
LD (CURRENT),HL
XOR A
RET

RINCL:LD HL,INCLBUF+128
LD DE,INCLBUF
LD BC,128
LDIR 
EXX
PUSH DE
EXX
LD C,RSEQ
LD DE,FCB
CALL 5
EXX
POP DE
EXX
LD L,3
INC A
LD HL,DMA
LD DE,INCLBUF+128
LD BC,128
LDIR 
RET

L0E67:LD HL,CCODES
EXX
BIT 4,E
EXX
JR Z,SEARCH
LD HL,L1550
JR SEARCH


OPTSCH:

; SEARCH FOR OPCODE NAME
; C=LENGTH
; (DE)=START CHAR
; RET CARRY SET IF ERROR

LD A,C
DEC A
SCF 
RET Z
LD A,(DE)
SUB 'A'
RET C
CP 1AH
CCF 
RET C
;WAS KEYADR
;         LD   HL,KEYTB
;         ADD  A,A
;         ADD  A,L
;         LD   L,A
;         JR   NC,$+3
;         INC  H

; With KEYTAB on PAGE boundary

ADD A
LD H,KEYTB/256
LD L,A

LD A,(HL)
INC HL
LD H,(HL)
LD L,A

INC DE
DEC BC
CALL SEARCH
INC BC
DEC DE
RET 

BAD:BIT 7,(HL)
INC HL
JR Z,BAD
INC HL
INC HL
POP DE
SEARCH:LD A,(HL)
INC A
SCF 
RET Z
PUSH DE
LD B,C

DEC B
JR Z,Last

Search:
LD A,(DE)
CP (HL)
JR NZ,BAD
INC DE
INC L
DJNZ Search
Last:
LD A,(DE)
OR 128
CP (HL)
JR NZ,BAD
INC DE
INC L


;SC2       LD   A,(DE)
;         DJNZ FC3
;         SET  7,A
;FC3       INC  B
;         CP   (HL)
;         JR   NZ,BAD
;         INC  DE
;         INC  HL
;         DJNZ SC2

LD E,(HL)
INC HL
LD D,(HL)
EX (SP),HL
EX DE,HL
POP IY
RET 

;LOPS      DB   'D'.S,NLTAB,0

RESOLV:CP 3
JR NZ,E6
EXX
LD A,E
EXX
BIT 5,A
JP NZ,UNDEF
BIT 3,A
RET 

LITLE:CP 3
JR NZ,E6
LITLE2:
EXX
BIT 0,D
EXX
RET NZ
LD A,H
OR A
RET Z
INC H
RET Z
E6:LD L,11  ;OPERAND
JP ER
MOFMIX:LD E,L
MOFMX2:BIT 3,E
JR NZ,E6
LD A,E
RLCA 
RLCA 
RLCA 
OR B
JP MOF
L0EDB:LD A,0EDH
JP MOF
MOFLH:LD A,L
CALL MOF
L0EE3:LD A,H
JP MOF
MOFB:LD A,B
MOF:PUSH HL
PUSH BC
CALL CL2
INC HL
LD (PC),HL
EXX
BIT 0,D
EXX
JR NZ,L0F0E

EXX
BIT 0,E
JR Z,NOPIBUF
LD HL,BUFF2-1
EX AF,AF
LD A,(ASSLNG)
INC A
LD (ASSLNG),A
ADD L
LD L,A
JR NC,$+3
INC H
EX AF,AF
LD (HL),A
NOPIBUF:EXX

LD HL,(OUTFLAG)
INC L
DEC L
JR NZ,CONTout

;         PUSH AF
;         LD   A,(OUTFLAG)
;         OR   A
;         JR   Z,NOTOUTPUT
;         JP   P,OUTAMST
;         POP  AF

NOTOUTPUT:
;         POP  AF
EXX
BIT 6,E
EXX
JR NZ,L0F0E
LD HL,(OBJ)
LD (HL),A
INC HL
LD (OBJ),HL
L0F0E:
POP BC
POP HL
XOR A
RET 
PARSER:
EXX
BIT 2,E
EXX

LD A,0BH
RET NZ

PUSH BC
CALL PARS1
POP BC
RET 

;_____________________________


CONTout:; Continuous output

BIT 7,L
JR NZ,OUTAMST

; Serial
PUSH DE
CALL SSBYTE
POP DE
JR L0F0E

; parallel
OUTAMST:
;         POP  AF
CALL PPBYTE
JR L0F0E


;_____________________________


PARS1:CALL L0FEF
RET C
CP 34H
LD B,0
JR NZ,L0F31
CALL L0FEF
LD B,4
L0F31:CP 32H
JR NZ,L0F66
LD A,H
OR B
LD D,A
PUSH HL
CALL L0FEF
POP HL
LD C,A
LD A,D
RET C
CP 6
JR NZ,L0F73
BIT 6,C
JR Z,L0F73
LD B,L
PUSH BC
CALL L0FEF
CALL L0F76
POP BC
CALL LITLE2
JR NZ,L0F62
LD A,L
BIT 7,C
JR Z,L0F5E
NEG 
LD L,A
L0F5E:XOR C
JP M,E6
L0F62:LD H,B
LD A,0AH
RET 

L0F66:CP 36H
JR NZ,L0F76
OR B
LD L,A
PUSH HL
CALL L0FEF
POP HL
LD A,L
RET C

L0F73:JP E6

L0F76:CP 3
JR NZ,L0F73
OR B
PUSH AF
L0F7C:PUSH HL
CALL L0FEF
POP HL
JR C,L0F94
PUSH AF
PUSH HL
CALL L0FEF
EX DE,HL
POP HL
CP 3
JR NZ,L0F73
POP AF
CALL CKADD
JR L0F7C
L0F94:POP AF
RET 

CKADD:CP 40H
JR NZ,CKSBC
ADD HL,DE
RET 

CKSBC:CP 0C0H
JR NZ,CKAND
SBC HL,DE
RET 

CKAND:CP 82H
JR NZ,CKOR
LD A,E
AND L
LD L,A
LD A,D
AND H
LD H,A
RET 

CKOR:CP 83H
JR NZ,CKDIV
LD A,E
OR L
LD L,A
LD A,D
OR H
LD H,A
RET 

CKDIV:LD C,E
LD B,D
EX DE,HL
CP 81H
JR NZ,CKMULT
LD HL,0
LD A,11H
OR A
L0FC6:ADC HL,HL
SBC HL,BC
JR NC,L0FCE
ADD HL,BC
SCF 
L0FCE:CCF 
RL E
RL D
DEC A
JR NZ,L0FC6
EX DE,HL
RET 

CKMULT:CP 80H
JR NZ,L0F73
LD HL,0
LD A,10H
L0FE1:SRL B
RR C
JR NC,L0FE8
ADD HL,DE
L0FE8:EX DE,HL
ADD HL,HL
EX DE,HL
DEC A
JR NZ,L0FE1
RET 

L0FEF:CALL CLASS
CP 31H
JP Z,E6
CP 0BH
JR NZ,L1001
EXX
SET 2,E
EXX
SCF 
RET 

L1001:CP 33H
SCF 
RET Z
CP 30H
SCF 
CCF 
RET NZ
CALL L0E67
LD A,32H
RET NC
CALL MSYMSCH
PUSH AF
LD A,(HL)
INC HL
LD H,(HL)
LD L,A
POP AF
LD A,3
RET NC
CCF 
EXX
SET 5,E
BIT 0,D
EXX
RET NZ
UNDEF:LD L,7   ;UNDEFINED
JP ER

ATYPE:LD HL,(CURRENT)
; CALL CKEOF
INC HL
LD (CURRENT),HL
DEC HL
LD A,(HL)
LD IY,TYPTAB

AFIND:PUSH DE
PUSH IY
EX (SP),HL
LD E,(HL)
LD D,E
NXTCHAR:INC HL
CP (HL)
JR Z,FOUNDCHR
DEC D
JP NZ,NXTCHAR
FOUNDCHR:LD D,0
ADD HL,DE
LD A,(HL)
ADD HL,DE
LD E,A
LD A,(HL)
;         BIT  7,E
RES 7,E
ADD HL,DE
EX (SP),HL
POP IY
POP DE
RET 

TL:EQU 0FH
TYPTAB:
DB TL,13,"'"
DB '$*/+-&.()'
DB 3BH,'",'
DB 0
DB CL3-$-TL  ;13
DB CL4-$-TL  ;'
DB CL2-$-TL  ;$
DB CL3-$-TL  ;*
DB CL3-$-TL  ;/
DB CL3-$-TL  ;+
DB CL3-$-TL  ;-
DB CL3-$-TL  ;&
DB CL3-$-TL  ;.
DB CL3-$-TL  ;(
DB CLASS-$-TL ;)
DB CL1-$-TL  ;;
DB CL4-$-TL  ;"
DB CL3-$-TL  ;,
DB CL5-$-TL
DB 0BH       ;13
DB 0         ;'
DB 3         ;$
DB 80H       ;*
DB 81H       ;/
DB 40H       ;+
DB 0C0H      ;-
DB 82H       ;&
DB 83H       ;.
DB 34H       ;(
DB 0         ;)
DB 0         ;;
DB 31H       ;"
DB 33H       ;,
DB 35H

CLASS:CALL ATYPE
LD BC,2100H
JP (IY)
CL1:LD A,(HL)
INC HL
CP 0DH
JP NZ,CL1
LD (CURRENT),HL
LD A,0BH
CL3:RET

CL2:LD HL,(PC)
EXX
BIT 7,E
EXX
RET Z
E11:LD L,5   ;ORG
JP ER
CL4:

; IS STRING

PUSH HL
LD B,(HL)
INC HL
LD E,(HL)
CL41:LD A,(HL)
INC HL
INC C
CP 0DH
JR Z,CLER
CP B
JR NZ,CL41
LD (CURRENT),HL
LD L,E
POP DE
DEC C
JR Z,CLER
LD H,C
LD A,3
DEC H
RET Z
INC H
LD A,36H
RET 

CL5:LD A,(HL)
CP B
JR C,CLASS
CP 30H
JR C,CL7
CP 3AH
JR NC,CL7

; IS NUMBER

CL6:CALL CL7
CP 31H
JR Z,CLER
LD B,C
CALL CONVERT
LD A,3
RET NC
CLER:JP E6
CL7:PUSH HL
POP DE
CL71:BIT 7,(HL)
JP NZ,E1
INC C
CALL ATYPE
CP 31H
RET Z
CP 35H
JR NZ,CL72
LD A,(HL)
CP B
JR NC,CL71
CL72:LD (CURRENT),HL
LD A,30H
RET 

JRH:CP 9
JR NZ,DJH
LD A,L
AND 0E7H
RET NZ
LD B,L
SET 5,B
CALL PARSER

DJH:CP NO
JR NZ,RNGERR
CALL MOFB
EXX
BIT 0,D
EXX
JR NZ,DJ2
LD DE,(PC)
SCF 
SBC HL,DE
LD A,H
INC H
JR Z,DJ1
DEC H
JR NZ,RNGERR
DJ1:XOR L
JP M,RNGERR
DJ2:LD A,L
JP MOF
RNGERR:LD L,13
JP ER

PRNTH:
CALL LITLE
SRL L
RET NZ
EXX
RES 0,E
EXX
JR NC,ISPROFF
EXX
SET 0,E
EXX
CALL SETTABUL
ISPROFF:CALL PARSER
CP EOL
LD B,0FEH
RET Z
CALL LITLE
LD A,L
EXX
BIT 0,D
EXX
CALL Z,POUT
JR ISPROFF


DWH:CP 3
RET NZ
CALL MOFLH
CALL PARSER
CP EOL
JP NZ,DWH
RET

DBH:CP 36H
JR NZ,L1138
L112E:INC DE
LD A,(DE)
CALL MOF
DEC H
JR NZ,L112E
JR L113F
L1138:CALL LITLE
LD A,L
CALL MOF
L113F:CALL PARSER
CP 0BH
JP NZ,DBH
RET 

DBHH:
LD HL,(CURRENT)
CALL FNSP
DBHL:
LD A,(HL)
CP 13
JR Z,GOTDBH
CP ";"
JR Z,GOTDBH
CP " "
JR Z,GOTDBH
INC HL
CALL NIBLE
ADD A
ADD A
ADD A
ADD A
LD C,A
LD A,(HL)
INC HL
CP 13
JR Z,DBHHER
CALL NIBLE
OR C
CALL MOF
JP DBHL
GOTDBH:LD (CURRENT),HL
XOR A
RET

DBBH:
LD HL,(CURRENT)
CALL FNSP
GETNXTBB:
LD B,1
LD A,(HL)
CP 13
JR Z,FIN_DBB
CP ";"
JR Z,FIN_DBB
CP " "
JR Z,FIN_DBB
GETBNUM:
LD A,(HL)
CP 13
JR Z,GOTDBB
CP ";"
JR Z,GOTDBB
CP " "
JR Z,GOTDBB
INC HL
SUB 48
RR A
JP NZ,DBHHER
RL B
JR NC,GETBNUM
LD A,B
CALL MOF
JR GETNXTBB
GOTDBB:
OR A
GOTBN1:RL B
JR NC,GOTBN1
LD A,B
CALL MOF
FIN_DBB:LD (CURRENT),HL
XOR A
RET

NIBLE:
SUB 48
CP 10
JR C,$+4
SUB 7
CP 10H
RET C

DBHHER:LD L,11
JP ER


DSH:CALL RESOLV
PUSH HL
CALL PARSER
CP EOL
JR Z,ISZERO
CALL LITLE
LD A,L
JR GOTVAL
ISZERO:XOR A
GOTVAL:POP HL
EX DE,HL
JR STARTDS
DSH1:PUSH AF
PUSH DE
CALL MOF
LD A,1
LD (ASSLNG),A
POP DE
POP AF
DEC DE
STARTDS:LD C,A
LD A,D
OR E
LD A,C
JR NZ,DSH1
XOR A
RET 

OUTPH:
EXX
RRC D
EXX
CALL NC,PUTPHEAD
LD A,127
LD (OUTFLAG),A
LD HL,(CURRENT)
CALL GETEOL
LD D,H
LD E,L
LD (CURRENT),HL
EXX
SET 2,E
RES 6,E
EXX
RET

OUTSH:
EXX
RRC D
EXX
CALL NC,SPSENDHED
LD A,255
LD (OUTFLAG),A
LD HL,(CURRENT)
CALL GETEOL
LD D,H
LD E,L
LD (CURRENT),HL
EXX
SET 2,E
RES 6,E
EXX
RET

LOADH:CALL RESOLV
LD (OBJ),HL
LD (ADD),HL
LD DE,(EOF)
OR A
SBC HL,DE
LD L,12
JP C,ER
EXX
RES 6,E
EXX
XOR A
LD (OUTFLAG),A
RET 

ORGH:CALL RESOLV
LD (PC),HL
LD (AMADD),HL
EXX
RES 7,E
EXX
JR NZ,L117E
RET 

EQUH:CALL RESOLV
JP Z,E0
L117E:EX DE,HL
EXX
RRC D
EXX
JR NC,ENDH
LD HL,(LBLP)
LD (HL),E
INC HL
LD (HL),D
ENDH:XOR A
RET 

LTAB:DB 15H
DB 'S'
DB 3
DB 80H
DB 8
DB 0
DB 11H
DB 'r'
DB 27H
DB 23H
DB 'p'
DB 7
DB 'q'
DB 17H
DB 12H
DB 0A3H
DB 13H
DB 0A0H
DB 0AH
DB 'P'
DB 5
DB 0
DB 95H
DB 98H
DB 21H
DB 0A0H
DB 0ACH
DB 31H
DB 35H
DB 0B4H
DB 0B3H
DB 3CH
DB 0BBH
DB 'B'
DB 0C1H
DB 0D2H
DB 0D8H
DB 0DFH
DB 'c'
DB 0E2H
DB 'j'
DB 0E9H
DB 36H
DB 16H
DB 6
DB 'G'
DB 'W'
DB 40H
DB 0F9H
DB 22H
DB 2AH
DB 21H
DB 32H
DB 3AH
DB 22H
DB 2AH
DB 0F9H
DB 36H
DB 1
DB 2
DB 0AH
DB 2
DB 0AH
DB 0
LD A,E
CP 4
RET NZ
CALL LITLE2
CALL MOFMX2
LD A,L
L11D2:JP MOF
LD A,E
CP 7
RET NZ
LD A,L
OR B
LD B,A
L30:CALL L0EDB
L11DF:JP MOFB
LD A,L
OR B
LD B,A
JP MOFMX2
L11E8:CP 'd'
RET NZ
JR L11DF
LD A,E
L11EE:CALL MOF
L11F1:CALL MOFB
L11F4:JP MOFLH
LD A,E
CP 7
JR Z,L11F1
JP E6
LD A,E
CP 4
JR Z,L11F1
CALL L0EDB
LD A,B
XOR 'a'
LD B,A
CALL MOFMX2
JP MOFLH
L1211:LD A,E
CP 6
RET NZ
LD H,B
JR L11F4
CALL LITLE2
LD A,D
LD H,L
LD L,E
JR L11EE
CALL MOFMX2
JR L11F4
CALL L0EE3
CALL L123C
LD A,L
JR L11D2
CP 7
JR Z,L11DF
SET 4,B
CP 27H
JR Z,L11DF
LD A,L
CP 4
RET NZ
L123C:BIT 3,B
LD B,'F'
JP NZ,MOFMX2
LD A,E
OR 'p'
JR L11D2
RSTH:CALL LITLE
JR NZ,L1250
LD A,L
AND B
RET NZ
L1250:LD A,B
OR L
JP MOF
RETH:CP 9
JR Z,L1250
LD B,0C9H
CP 0BH
JR L1270

JL:EQU 3

JMPTAB:DB JL

DB 'k'
DB 5BH
DB 0

DB JMP1-$-JL
DB JMP2-$-JL
DB JMP3-$-JL

DB 0E9H
DB 0E9H
DB 0C3H

JMP1:LD H,B
JP MOFLH
JMP2:LD A,L
CP 4
L1270:RET NZ
JP MOFB
CL:EQU 1
CALTAB:DB CL,0
DB JMP3-$-CL
DB 0CDH
JMP3:LD A,C
CP 3BH
JP Z,L11F1
CP 93H
RET NZ
LD A,B
AND 0C6H
OR L
LD B,A
EX DE,HL
JP L11F1
PPH:CP 1
JR NZ,L1299
LD A,L
CP 6
JP Z,E6
RES 3,L
JP MOFMIX
L1299:CP 2
RET NZ
L129C:SET 5,B
LD H,B
JP MOFLH
IMH:CALL LITLE
JR NZ,L12AB
LD A,2
SUB L
RET C
L12AB:LD DE,L12B3
ADD HL,DE
LD B,(HL)
JP L30
L12B3:DB 'F'
DB 'V'
DB 5EH
INCH:CP 2
JR Z,L129C
CP 1
JP Z,MOFMIX
BIT 3,B
LD B,34H
JR Z,L12C6
INC B
L12C6:OR A
JP NZ,ML2
LD A,B
AND 0C7H
LD B,A
JP MOFMIX

AL:EQU 6
ADCTAB:DB AL
DB NO*16.EOL
DB TR*16.EOL
DB RPI*16.EOL
DB XYD*16.EOL
DB RP*16.RP
DB 0
DB DL0-$-AL.S
DB DL0-$-AL.S
DB DL0-$-AL.S
DB DL0-$-AL.S
DB DL1-$-AL
DB DL5-$-AL.S
DB 8EH,8EH
DB 8EH,8EH
DB 4AH
DB 8EH

SBL:EQU 6
SBCTAB:DB SBL
DB NO*16.EOL
DB TR*16.EOL
DB RPI*16.EOL
DB XYD*16.EOL
DB RP*16.RP
DB 0
DB DL0-$-SBL.S
DB DL0-$-SBL.S
DB DL0-$-SBL.S
DB DL0-$-SBL.S
DB DL1-$-SBL
DB DL5-$-SBL.S
DB 9EH,9EH
DB 9EH,9EH
DB 'B'
DB 9EH

ADL:EQU 8
ADDTAB:DB ADL
DB NO*16.EOL
DB TR*16.EOL
DB RPI*16.EOL
DB XYD*16.EOL
DB RP*16.RP
DB XY*16.RP
DB XY*16.XY
DB 0
DB DL0-$-ADL.S
DB DL0-$-ADL.S
DB DL0-$-ADL.S
DB DL0-$-ADL.S
DB DL2-$-ADL
DB DL3-$-ADL
DB DL4-$-ADL
DB DL5-$-ADL.S
DB 86H,86H
DB 86H,86H
DB 9
DB 9
DB 29H
DB 86H
DL0:
PUSH AF
LD E,IA
LD A,C
AND 0F0H
RRC A
RRC A
RRC A
RRC A
OR TR*16
LD C,A
POP AF
JR DL5

DL1:CALL L0EDB
DL2:LD A,L
CP 4
RET NZ
JP MOFMX2
DL3:LD A,E
CP 4
JP Z,E6
LD A,L
CALL MOF
JP MOFMX2
DL4:LD A,E
CP L
LD H,B
RET NZ
JP MOFLH
DL5:LD A,C
AND 0F0H
RET NZ
BIT 2,E
JP Z,E6
LD A,C
AND 0FH
ML1:CP 3
JR NZ,ML2
SET 6,B
ML11:CALL LITLE2
ML12:LD H,L
LD L,B
LD B,0
JP MOFLH
ML2:CP 0AH
JR NZ,ML3
CALL L0EE3
JR ML12
ML3:CP 5
JP Z,JMP2
OR A
RET NZ
LD A,B
AND 0F8H
OR L
JP MOF
BITH:CALL LITLE
JR NZ,L1343
LD A,7
SUB L
RET C
L1343:LD A,L
RLCA 
RLCA 
RLCA 
OR B
LD B,A
CALL PARSER
SRH:CP 0AH
JR NZ,L135C
PUSH HL
LD L,H
LD H,0CBH
CALL MOFLH
POP HL
LD H,B
JP MOFLH
L135C:PUSH AF
LD A,0CBH
CALL MOF
POP AF
JR ML3
INTAB:DB 3
DB 7
DB 4
DB 0
DB 8DH
DB 93H
DB 19H
DB 0DBH
DB 40H
DB 0
OUTAB:DB 3
DB 'p'
DB 40H
DB 0
DB 3
DB 9
DB 0FH
DB 0D3H
DB 'A'
DB 0
IO1:BIT 2,E
JR Z,L1387
JP ML11
CALL L0EDB
IO2:DEC L
JP Z,MOFMX2
L1387:JP E6
XTAB:DB 4
DB 11H
DB 'Q'
DB 'R'
DB 0

DB 4
DB 11H
DB 93H
DB 0DH
DB 0EBH
DB 0E3H
DB 0E3H
DB 0

X1:CP 24H
JP Z,MOFB
LD B,8
CP 0EEH
JP Z,MOFB
XER:JR L1387
X2:JP L11E8
X3:JP L1211

DS 2700H-$

KEYTB:
DW AOPS
DW BOPS
DW COPS
DW DOPS
DW EOPS
DW FOPS
DW GOPS
DW HOPS
DW IOPS
DW JOPS
DW KOPS
DW LOPS
DW MOPS
DW NOPS
DW OOPS
DW POPS
DW QOPS
DW ROPS
DW SOPS
DW TOPS
DW UOPS
DW VOPS
DW WOPS
DW XOPS
DW YOPS
DW ZOPS

AOPS:
DB 'D','D'.S,NADDTAB,0
DB 'N','D'.S,NML1H,0A6H
DB "D","C".S,NADCTAB,0
DB 0FFH
BOPS:DB 'I','T'.S,NBITH,46H
DB 0FFH
COPS:DB 'AL','L'.S,NCALTAB.S,0
DB 'P'.S,NML1H,0BEH
DB 'C','F'.S,NMOFB,3FH
DB 'P','L'.S,NMOFB,2FH
DB 'P','I'.S,NL30,0A1H
DB 'PI','R'.S,NL30,0B1H
DB 'P','D'.S,NL30,0A9H
DB 'PD','R'.S,NL30,0B9H
DB 0FFH
DOPS:DB 'E','C'.S,NINCH,0BH
DB 'B','H'.S,NDBHH,0
DB 'B'.S,NDBH,0
DB 'W'.S,NDWH,0
DB 'S'.S,NDSH,0
DB 'B','B'.S,NDBBH,0
DB 'JN','Z'.S,NDJH,10H
DB 'I'.S,NMOFB,0F3H
DB 'A','A'.S,NMOFB,27H
DB 0FFH
EOPS:
DB 'Q','U'.S,NEQUH,0
DB 'X'.S,NXTAB,0
DB 'X','X'.S,NMOFB,0D9H
DB 'I'.S,NMOFB,0FBH
DB 'N','D'.S,NENDH,0FFH

FOPS:
GOPS:DB 0FFH
HOPS:DB 'AL','T'.S,NMOFB,76H
DB 0FFH
IOPS:DB 'N','C'.S,NINCH,3
DB 'M'.S,NIMH,0
DB 'N'.S,NINTAB,0
DB 'N','I'.S,NL30,0A2H
DB 'NI','R'.S,NL30,0B2H
DB 'N','D'.S,NL30,0AAH
DB 'ND','R'.S,NL30,0BAH
DB 'NC','L'.S,NINCLH,0
DB 0FFH
JOPS:DB 'R'.S,NJRH.S,18H
DB 'P'.S,NJMPTAB.S,0
DB 0FFH
KOPS:DB 'E','Y'.S,NKEYH,0
DB 0FFH
LOPS:DB 'D'.S,NLTAB,0
DB 'D','I'.S,NL30,0A0H
DB 'DI','R'.S,NL30,0B0H
DB 'D','D'.S,NL30,0A8H
DB 'DD','R'.S,NL30,0B8H
DB 'OA','D'.S,NLOADH,0

MOPS:DB 0FFH
NOPS:DB 'O','P'.S,NMOFB,0
DB 'E','G'.S,NL30,44H
DB 0FFH

DB "MAKE  PAGE"

OOPS:DB 'R'.S,NML1H,0B6H
DB 'U','T'.S,NOUTAB,0
DB 'UT','I'.S,NL30,0A3H
DB 'TI','R'.S,NL30,0B3H
DB 'UT','D'.S,NL30,0ABH
DB 'TD','R'.S,NL30,0BBH
DB 'R','G'.S,NORGH,0
DB 'UT','P'.S,NOUTP,0
DB 'UT','S'.S,NOUTS,0
DB 0FFH
POPS:DB 'US','H'.S,NPPH,0C5H
DB 'O','P'.S,NPPH,0C1H
DB 'RN','T'.S,NPRNTH,0

QOPS:DB 0FFH
ROPS:DB 'E','T'.S,NRETH.S,0C0H
DB 'R','A'.S,NMOFB,1FH
DB 'E','S'.S,NBITH,86H
DB 'L'.S,NSRH,16H
DB 'L','C'.S,NSRH,6
DB 'LC','A'.S,NMOFB,7
DB 'L','A'.S,NMOFB,17H
DB 'R'.S,NSRH,1EH
DB 'R','C'.S,NSRH,0EH
DB 'RC','A'.S,NMOFB,0FH
DB 'L','D'.S,NL30,6FH
DB 'R','D'.S,NL30,67H
DB 'ET','I'.S,NL30,4DH
DB 'ET','N'.S,NL30,45H
DB 'S','T'.S,NRSTH,0C7H
DB 0FFH
SOPS:
DB 'B','C'.S,NSBCTAB,0
DB 'U','B'.S,NML1H,96H
DB 'C','F'.S,NMOFB,37H
DB 'L','A'.S,NSRH,26H
DB 'R','A'.S,NSRH,2EH
DB 'R','L'.S,NSRH,3EH
DB 'E','T'.S,NBITH,0C6H

TOPS:
UOPS:
VOPS:
WOPS:DB 0FFH
XOPS:DB 'O','R'.S,NML1H,0AEH

YOPS:
ZOPS:DB 0FFH

CCODES:DB 'N'
DB 0DAH
DB 0
DB 9
DB 0DAH
DB 8
DB 9
DB 'N'
DB 0C3H
DB 10H
DB 9
DB 0C3H
DB 18H
DB 9
DB 'P'
DB 0CFH
DB 20H
DB 9
DB 'P'
DB 0C5H
DB 28H
DB 9
DB 0D0H
DB 30H
DB 9
DB 0CDH
DB 38H
DB 9
L1550:DB 0C2H
DB 0
DB 0
DB 0C3H
DB 1
DB 0
DB 0C4H
DB 2
DB 0
DB 0C5H
DB 3
DB 0
DB 0C8H
DB 4
DB 0
DB 0CCH
DB 5
DB 0
DB 0C1H
DB 7
DB 0
DB 'B'
DB 0C3H
DB 0
DB 1
DB 'D'
DB 0C5H
DB 2
DB 1
DB 'H'
DB 0CCH
DB 4
DB 1
DB 'S'
DB 0D0H
DB 6
DB 1
DB 'A'
DB 0C6H
DB 0EH
DB 1
DB 'I'
DB 0D8H
DB 0DDH
DB 2
DB 'I'
DB 0D9H
DB 0FDH
DB 2
DB 0C9H
DB 0
DB 8
DB 0D2H
DB 8
DB 8
DB 0FFH

OUTFLAG:DB 0

INCADR:DW 0


LABADS:DW 0,0,0,0,0,0,0,0,0,0
DW 0,0,0,0,0,0,0,0,0,0
DW 0,0,0,0,0,0

ZKEYIN:EQU 9CCFH
SCURS:DW 0D1CFH
ZOUT:EQU 0D0CFH
OUTC:EQU 9ECFH
PR4HX:EQU 0A9CFH
GETHL:EQU 0ACCFH
ZDEC:EQU 83CFH
C40:EQU 0EH
FLAGS:EQU 0FB3EH
VCOL:EQU 0FB4AH
VROW:EQU 0FB4BH
XLEN:EQU 0FB4FH
FCB:EQU 5CH
DMA:EQU 80H
OPE:EQU 0FH
CLO:EQU 10H
ERA:EQU 13H
RSEQ:EQU 14H
WSEQ:EQU 15H
CRE:EQU 16H
REN:EQU 17H


AEND:


END